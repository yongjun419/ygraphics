let cols, rows;
let scl = 20;
let w = 1400;
let h = 1000;

let flying = 0;

let terrain = [];

function setup() {
  createCanvas(600, 600, WEBGL);
  cols = w / scl;
  rows = h / scl;

  for (let x = 0; x < cols; x++) {
    terrain[x] = [];
    for (let y = 0; y < rows; y++) {
      terrain[x][y] = 0; // 일단 기본값 지정
    }
  }
  noStroke();
  // 조명 색상 설정 (파란색)
  ambientLight(0, 0, 255); // 주변 빛 설정
  directionalLight(255, 255, 255, 0.5, 0.5, -1); // 방향성 있는 광원 설정
}

function draw() {

  flying -= 0.1;
  let yoff = flying;
  for (let y = 0; y < rows; y++) {
    var xoff = 0;
    for (let x = 0; x < cols; x++) {
      terrain[x][y] = map(noise(xoff, yoff), 0, 1, -100, 100);
      xoff += 0.2;
    }
    yoff += 0.2;
  }
  background(0, 128, 255);
  rotateX(PI / 3);
  fill(164, 164, 164, 196);
  translate(-w / 2, -h / 2);
  for (let y = 0; y < rows - 1; y++) {
    beginShape(TRIANGLE_STRIP);
    for (let x = 0; x < cols; x++) {
      let v = terrain[x][y];
      fill(v + 128, 0, 0, v + 100);
      vertex(x * scl, y * scl, terrain[x][y]);
      vertex(x * scl, (y + 1) * scl, terrain[x][y + 1]);
    }
    endShape();
  }
  push();
  translate(w / 2, h / 2);
  translate(mouseX - width / 2, (mouseY - height / 2) * 6);
  rotate(PI / 5);
  // 조명 색상 설정 (노란색)
  specularMaterial(255, 255, 0); // 재질에 반사 속성 부여
  pointLight(255, 255, 255, 0, 0, 200); // 특정 지점에서의 광원 설정
  // 별 모양 그리기
  beginShape();
  for (let a = 0; a < TWO_PI; a += TWO_PI / 5) {
    let sx = cos(a) * 100;
    let sy = sin(a) * 100;
    vertex(sx, 0, sy); // y좌표를 0으로 수정하여 세워짐을 표현
    let tx = cos(a + TWO_PI / 10) * 50;
    let ty = sin(a + TWO_PI / 10) * 50;
    vertex(tx, 0, ty); // y좌표를 0으로 수정하여 세워짐을 표현
  }
  endShape(CLOSE);
  pop(); // 도형을 추가 한다.
}
